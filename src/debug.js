// ============================================================================
// DK NEWS HUNTERS - Debug Console JavaScript
// –ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—Ç–ª–∞–¥–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
// ============================================================================

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –≤—Å–µ—Ö debug —Ñ—É–Ω–∫—Ü–∏–π
window.DK = {
    // –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    version: "1.52",
    initialized: false,
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è debug –∫–æ–Ω—Å–æ–ª–∏
    init() {
        this.log.info("üöÄ DK Debug Console –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
        this.log.info(`üìã –í–µ—Ä—Å–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è: ${this.version}`);
        this.initialized = true;
        this.updateStatus("–ö–æ–Ω—Å–æ–ª—å –≥–æ—Ç–æ–≤–∞", true);
        this.loadExtensionInfo();
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
        setTimeout(() => {
            this.diagnose();
        }, 1000);
    }
};

// ============================================================================
// –ú–û–î–£–õ–¨ –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø
// ============================================================================
DK.log = {
    container: null,
    
    init() {
        this.container = document.getElementById('logContent');
    },
    
    write(message, type = 'info') {
        if (!this.container) this.init();
        
        const timestamp = new Date().toLocaleTimeString();
        const colors = {
            info: '#00ff00',
            warn: '#ffff00', 
            error: '#ff4444',
            success: '#00ff88'
        };
        
        const logEntry = document.createElement('div');
        logEntry.style.color = colors[type] || colors.info;
        logEntry.textContent = `[${timestamp}] ${message}`;
        
        this.container.appendChild(logEntry);
        this.container.scrollTop = this.container.scrollHeight;
    },
    
    info(message) { this.write(message, 'info'); },
    warn(message) { this.write(message, 'warn'); },
    error(message) { this.write(message, 'error'); },
    success(message) { this.write(message, 'success'); },
    
    clear() {
        if (!this.container) this.init();
        this.container.innerHTML = '–õ–æ–≥ –æ—á–∏—â–µ–Ω...';
    }
};

// ============================================================================
// –ú–û–î–£–õ–¨ –¢–û–†–ì–û–í–û–ô –°–ò–°–¢–ï–ú–´
// ============================================================================
DK.trading = {
    async activate() {
        DK.log.info("üü¢ –ü–æ–ø—ã—Ç–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã...");
        
        try {
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
            const storage = await chrome.storage.local.get(['selectedNews', 'selectedAsset', 'selectedPair']);
            
            if (!storage.selectedNews || !storage.selectedAsset || !storage.selectedPair) {
                DK.log.warn("‚ö†Ô∏è –ù–µ –≤—ã–±—Ä–∞–Ω—ã –Ω–æ–≤–æ—Å—Ç—å, –∞–∫—Ç–∏–≤ –∏–ª–∏ –≤–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞");
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                const testData = {
                    selectedNews: { event: "Test GDP Report", currency: "EUR" },
                    selectedAsset: "EUR", 
                    selectedPair: "EUR/USD"
                };
                
                await chrome.storage.local.set(testData);
                DK.log.info("üìù –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏");
            }
            
            const response = await chrome.runtime.sendMessage({
                action: "activateTrading",
                selectedNews: storage.selectedNews || { event: "Test GDP Report", currency: "EUR" },
                selectedAsset: storage.selectedAsset || "EUR",
                selectedPair: storage.selectedPair || "EUR/USD"
            });
            
            if (response?.success) {
                DK.log.success("‚úÖ –¢–æ—Ä–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞");
                DK.updateStatus("–¢–æ—Ä–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞", true);
            } else {
                DK.log.error("‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã");
            }
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    },
    
    async deactivate() {
        DK.log.info("üî¥ –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã...");
        
        try {
            const response = await chrome.runtime.sendMessage({ action: "deactivateTrading" });
            
            if (response?.success) {
                DK.log.success("‚úÖ –¢–æ—Ä–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞");
                DK.updateStatus("–¢–æ—Ä–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞", false);
            } else {
                DK.log.error("‚ùå –û—à–∏–±–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã");
            }
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    },
    
    async getState() {
        DK.log.info("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã...");
        
        try {
            const response = await chrome.runtime.sendMessage({ action: "getTradingState" });
            
            if (response) {
                DK.log.info(`üîç –ê–∫—Ç–∏–≤–Ω–∞: ${response.isActive ? '–î–∞' : '–ù–µ—Ç'}`);
                DK.log.info(`üì∞ –í—ã–±—Ä–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å: ${response.state?.selectedNews?.event || '–ù–µ –≤—ã–±—Ä–∞–Ω–∞'}`);
                DK.log.info(`üí± –ê–∫—Ç–∏–≤: ${response.state?.selectedAsset || '–ù–µ –≤—ã–±—Ä–∞–Ω'}`);
                DK.log.info(`üìà –ü–∞—Ä–∞: ${response.state?.selectedPair || '–ù–µ –≤—ã–±—Ä–∞–Ω–∞'}`);
                
                if (response.state?.startTime) {
                    const uptime = Math.floor((Date.now() - response.state.startTime) / 1000);
                    DK.log.info(`‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${uptime} —Å–µ–∫—É–Ω–¥`);
                }
            } else {
                DK.log.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã");
            }
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    },
    
    async buy() {
        DK.log.info("üìà –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä—É—á–Ω–æ–π –ø–æ–∫—É–ø–∫–∏ (Call)...");
        
        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º
        DK.log.info("üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π...");
        try {
            const clearResponse = await chrome.runtime.sendMessage({ action: "clearProcessedNews" });
            if (clearResponse?.success) {
                DK.log.success("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –æ—á–∏—â–µ–Ω–∞");
            } else {
                DK.log.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ background script");
            }
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ${error.message}`);
        }
        
        await this.executeTrade("buy");
    },
    
    async sell() {
        DK.log.info("üìâ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä—É—á–Ω–æ–π –ø—Ä–æ–¥–∞–∂–∏ (Put)...");
        
        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º
        DK.log.info("üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π...");
        try {
            const clearResponse = await chrome.runtime.sendMessage({ action: "clearProcessedNews" });
            if (clearResponse?.success) {
                DK.log.success("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –æ—á–∏—â–µ–Ω–∞");
            } else {
                DK.log.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ background script");
            }
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ${error.message}`);
        }
        
        await this.executeTrade("sell");
    },
    
    async executeTrade(action) {
        try {
            const testNews = {
                event: "Manual Trade Test",
                currency: "EUR",
                actual: "1.5%",
                actualType: action === "buy" ? "GFP" : "RFP"
            };
            
            const response = await chrome.runtime.sendMessage({
                action: "executeTrade",
                tradeAction: action,
                newsItem: testNews
            });
            
            if (response?.success) {
                DK.log.success(`‚úÖ ${action === "buy" ? "–ü–æ–∫—É–ø–∫–∞" : "–ü—Ä–æ–¥–∞–∂–∞"} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);
            } else {
                DK.log.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ ${action === "buy" ? "–ø–æ–∫—É–ø–∫–∏" : "–ø—Ä–æ–¥–∞–∂–∏"}`);
            }
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    }
};

// ============================================================================
// –ú–û–î–£–õ–¨ –†–ê–ë–û–¢–´ –° –ù–û–í–û–°–¢–Ø–ú–ò
// ============================================================================
DK.news = {
    async update() {
        DK.log.info("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π...");
        
        try {
            const response = await chrome.runtime.sendMessage({ action: "openInvesting" });
            
            if (response?.success) {
                DK.log.success("‚úÖ –ù–æ–≤–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã");
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                setTimeout(() => {
                    this.show();
                }, 2000);
            } else {
                DK.log.error("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π");
            }
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    },
    
    async show() {
        DK.log.info("üìã –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π...");
        
        try {
            const result = await chrome.storage.local.get(['newsData']);
            
            if (result.newsData && Array.isArray(result.newsData)) {
                DK.log.info(`üìä –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: ${result.newsData.length}`);
                
                result.newsData.slice(0, 5).forEach((news, index) => {
                    DK.log.info(`${index + 1}. ${news.time} | ${news.currency} | ${news.event}`);
                    DK.log.info(`   –§–∞–∫—Ç: ${news.actual || '‚Äî'} (${news.actualType})`);
                });
                
                if (result.newsData.length > 5) {
                    DK.log.info(`... –∏ –µ—â–µ ${result.newsData.length - 5} –Ω–æ–≤–æ—Å—Ç–µ–π`);
                }
            } else {
                DK.log.warn("‚ö†Ô∏è –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
            }
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    },
    
    async clearProcessed() {
        DK.log.info("üßπ –û—á–∏—Å—Ç–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π...");
        
        try {
            await chrome.storage.local.remove(['processedNews']);
            DK.log.success("‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ—á–∏—â–µ–Ω—ã");
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    }
};

// ============================================================================
// –ú–û–î–£–õ–¨ –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò –ò BID
// ============================================================================
DK.auth = {
    async checkBID() {
        DK.log.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ BID...");
        
        try {
            const result = await chrome.storage.local.get(['USER_BID', 'expected_bid']);
            
            if (result.USER_BID) {
                DK.log.success(`‚úÖ –¢–µ–∫—É—â–∏–π BID: ${result.USER_BID}`);
            } else {
                DK.log.warn("‚ö†Ô∏è BID –Ω–µ –Ω–∞–π–¥–µ–Ω");
            }
            
            if (result.expected_bid) {
                DK.log.info(`üìù –û–∂–∏–¥–∞–µ–º—ã–π BID: ${result.expected_bid}`);
                
                if (result.USER_BID && result.expected_bid !== result.USER_BID) {
                    DK.log.warn("‚ö†Ô∏è BID –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –æ–∂–∏–¥–∞–µ–º—ã–º!");
                }
            }
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    },
    
    async forceBID() {
        DK.log.info("‚ö° –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ BID...");
        
        try {
            // –ò—â–µ–º –±—Ä–æ–∫–µ—Ä—Å–∫–∏–µ –≤–∫–ª–∞–¥–∫–∏
            const tabs = await chrome.tabs.query({ url: "*://*/*" });
            DK.log.info(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ ${tabs.length} –≤–∫–ª–∞–¥–æ–∫...`);
            
            for (const tab of tabs) {
                if (tab.url && !tab.url.startsWith('chrome://') && !tab.url.startsWith('chrome-extension://')) {
                    try {
                        const results = await chrome.scripting.executeScript({
                            target: { tabId: tab.id },
                            func: () => {
                                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –±—Ä–æ–∫–µ—Ä—Å–∫–∏–º —Å–∞–π—Ç–æ–º
                                const bidElement = document.querySelector('.info__id');
                                if (bidElement) {
                                    const childWithDataHdShow = Array.from(bidElement.children).find(child => child.hasAttribute('data-hd-show'));
                                    if (childWithDataHdShow) {
                                        const bid = childWithDataHdShow.getAttribute('data-hd-show');
                                        const bidValue = bid ? bid.replace('id ', '') : null;
                                        if (bidValue) {
                                            chrome.storage.local.set({ USER_BID: bidValue });
                                            return bidValue;
                                        }
                                    }
                                }
                                return null;
                            }
                        });
                        
                        if (results && results[0] && results[0].result) {
                            DK.log.success(`‚úÖ BID –ø–æ–ª—É—á–µ–Ω: ${results[0].result}`);
                            DK.log.info(`üåê –°–∞–π—Ç: ${tab.url}`);
                            return;
                        }
                    } catch (err) {
                        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–∫
                    }
                }
            }
            
            DK.log.warn("‚ö†Ô∏è BID –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –Ω–∞ –æ–¥–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ");
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    },
    
    async verifySubscription() {
        DK.log.info("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏...");
        
        try {
            const result = await chrome.storage.local.get(['authToken']);
            
            if (!result.authToken) {
                DK.log.warn("‚ö†Ô∏è –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω");
                return;
            }
            
            DK.log.info("üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É...");
            
            // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ (—Ç–∞–∫ –∫–∞–∫ –Ω–µ –º–æ–∂–µ–º –≤—ã–∑–≤–∞—Ç—å —Ñ–æ–Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞–ø—Ä—è–º—É—é)
            DK.log.info("üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ background script");
            DK.log.info("üí° –°–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏ –≤ DevTools background page –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞");
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    },
    
    async logout() {
        DK.log.info("üö™ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã...");
        
        try {
            await chrome.storage.local.remove(['authToken', 'expected_bid', 'USER_BID']);
            DK.log.success("‚úÖ –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—á–∏—â–µ–Ω—ã");
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    }
};

// ============================================================================
// –ú–û–î–£–õ–¨ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
// ============================================================================
DK.test = {
    async simulateNews() {
        const currency = document.getElementById('testCurrency').value;
        const factType = document.getElementById('testFactType').value;
        const selectedPair = document.getElementById('testPair').value;
        
        DK.log.info(`üé≤ –°–∏–º—É–ª—è—Ü–∏—è –Ω–æ–≤–æ—Å—Ç–∏: ${currency} ${factType} –¥–ª—è –ø–∞—Ä—ã ${selectedPair}`);
        
        // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å —Å timestamp –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        const timestamp = Date.now();
        const testNews = {
            time: new Date().toLocaleTimeString(),
            event: `Test ${currency} Economic Report #${timestamp}`,
            currency: currency,
            impact: 3,
            actual: "1.5%",
            actualType: factType,
            forecast: "1.2%",
            previous: "1.1%",
            debugId: timestamp // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è debug
        };
        
        try {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –≤—ã–±—Ä–∞–Ω–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å
            await chrome.storage.local.set({
                selectedNews: { 
                    event: testNews.event, 
                    currency: testNews.currency,
                    debugId: testNews.debugId 
                },
                selectedAsset: currency,
                selectedPair: selectedPair
            });
            
            DK.log.success("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∞ –∏ –≤—ã–±—Ä–∞–Ω–∞");
            DK.log.info(`üì∞ –°–æ–±—ã—Ç–∏–µ: ${testNews.event}`);
            DK.log.info(`üí± –í–∞–ª—é—Ç–∞: ${testNews.currency}`);
            DK.log.info(`üìà –í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞: ${selectedPair}`);
            DK.log.info(`üìä –§–∞–∫—Ç: ${testNews.actual} (${testNews.actualType})`);
            DK.log.info(`üî¢ Debug ID: ${testNews.debugId}`);
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    },
    
    async tradingCycle() {
        DK.log.info("üîÑ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏...");
        
        try {
            // 0. –ü–û–õ–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π (–∏ storage, –∏ memory)
            DK.log.info("üßπ –≠—Ç–∞–ø 0: –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π (DEBUG MODE)");
            const clearResponse = await chrome.runtime.sendMessage({ action: "clearProcessedNews" });
            if (clearResponse?.success) {
                DK.log.success("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞");
            } else {
                DK.log.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–µ—Ä–µ–∑ background script");
            }
            await this.delay(500);
            
            // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –Ω–æ–≤–æ—Å—Ç—å
            DK.log.info("üì∞ –≠—Ç–∞–ø 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –Ω–æ–≤–æ—Å—Ç–∏");
            await this.simulateNews();
            await this.delay(1000);
            
            // 2. –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ç–æ—Ä–≥–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
            DK.log.info("üü¢ –≠—Ç–∞–ø 2: –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã");
            await DK.trading.activate();
            await this.delay(2000);
            
            // 3. –ü—Ä–æ–≤–µ—Ä–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            DK.log.info("üìä –≠—Ç–∞–ø 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è");
            await DK.trading.getState();
            await this.delay(1000);
            
            // 4. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–æ–≤–æ—Å—Ç—å –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–ª–∏
            DK.log.info("üîç –≠—Ç–∞–ø 4: –ê–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ—Ä–≥–æ–≤–ª–∏");
            const currency = document.getElementById('testCurrency').value;
            const factType = document.getElementById('testFactType').value;
            const selectedPair = document.getElementById('testPair').value;
            
            const tradeDirection = this.calculateTradeDirection(currency, factType, selectedPair);
            
            if (tradeDirection === 'none') {
                DK.log.warn("‚ö†Ô∏è –¢–æ—Ä–≥–æ–≤–ª—è –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è");
                DK.log.info(`üí° –õ–æ–≥–∏–∫–∞: ${this.getTradeLogicExplanation(currency, factType, selectedPair, tradeDirection)}`);
                
                // 5. –≠—Ç–∞–ø –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è - —Ç–æ—Ä–≥–æ–≤–ª–∏ –Ω–µ –±—É–¥–µ—Ç
                DK.log.info("üö´ –≠—Ç–∞–ø 5: –¢–æ—Ä–≥–æ–≤–ª—è –ø—Ä–æ–ø—É—â–µ–Ω–∞ (–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å)");
            } else {
                DK.log.info(`üìà –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–ª–∏: ${tradeDirection === 'buy' ? 'CALL (–≤–≤–µ—Ä—Ö)' : 'PUT (–≤–Ω–∏–∑)'}`);
                DK.log.info(`üí° –õ–æ–≥–∏–∫–∞: ${this.getTradeLogicExplanation(currency, factType, selectedPair, tradeDirection)}`);
                
                // 5. –ò–º–∏—Ç–∏—Ä—É–µ–º —Ç–æ—Ä–≥–æ–≤–ª—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
                DK.log.info("üí∞ –≠—Ç–∞–ø 5: –ò–º–∏—Ç–∞—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏");
                if (tradeDirection === 'buy') {
                    await DK.trading.buy();
                } else {
                    await DK.trading.sell();
                }
                await this.delay(2000);
            }
            
            // 6. –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É
            DK.log.info("üî¥ –≠—Ç–∞–ø 6: –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã");
            await DK.trading.deactivate();
            
            DK.log.success("‚úÖ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ç–æ—Ä–≥–æ–≤–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω");
            DK.log.info("üí° –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é");
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ —Ç–æ—Ä–≥–æ–≤–ª–∏: ${error.message}`);
        }
    },
    
    async loadSampleNews() {
        DK.log.info("üìä –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π...");
        
        const sampleNews = [
            {
                time: "10:00",
                event: "GDP Growth Rate",
                currency: "EUR",
                impact: 3,
                actual: "1.5%",
                actualType: "GFP",
                forecast: "1.2%",
                forecastType: "NFP",
                previous: "1.1%",
                previousType: "NFP"
            },
            {
                time: "12:30", 
                event: "Unemployment Rate",
                currency: "USD",
                impact: 2,
                actual: "3.8%",
                actualType: "RFP",
                forecast: "3.5%",
                forecastType: "NFP",
                previous: "3.7%",
                previousType: "NFP"
            },
            {
                time: "15:45",
                event: "Interest Rate Decision",
                currency: "GBP",
                impact: 3,
                actual: "5.25%",
                actualType: "BFP",
                forecast: "5.25%", 
                forecastType: "NFP",
                previous: "5.00%",
                previousType: "NFP"
            }
        ];
        
        try {
            await chrome.storage.local.set({ newsData: sampleNews });
            DK.log.success(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${sampleNews.length} —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π`);
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    },
    
    async backgroundConnection() {
        DK.log.info("üîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤—è–∑–∏ —Å background script...");
        
        try {
            const response = await chrome.runtime.sendMessage({ action: "getTradingState" });
            
            if (response) {
                DK.log.success("‚úÖ –°–≤—è–∑—å —Å background script —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞");
                DK.log.info(`üìä –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: ${JSON.stringify(response, null, 2)}`);
            } else {
                DK.log.warn("‚ö†Ô∏è Background script –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç");
            }
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑–∏: ${error.message}`);
        }
    },
    
    getTestPair(currency) {
        const pairs = {
            "EUR": "EUR/USD",
            "USD": "USD/JPY", 
            "GBP": "GBP/USD",
            "JPY": "USD/JPY",
            "AUD": "AUD/USD",
            "CAD": "USD/CAD",
            "CHF": "USD/CHF"
        };
        return pairs[currency] || "EUR/USD";
    },
    
    delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    },
    
    calculateTradeDirection(currency, factType, selectedPair) {
        // –î–ª—è BFP (—á–µ—Ä–Ω—ã–π —Ñ–∞–∫—Ç) –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å–¥–µ–ª–∫—É
        if (factType === 'BFP') {
            return 'none'; // –ù–µ —Ç–æ—Ä–≥—É–µ–º –ø—Ä–∏ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç—è—Ö
        }
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—É—é –∏ –∫–æ—Ç–∏—Ä—É–µ–º—É—é –≤–∞–ª—é—Ç—ã
        const [baseCurrency, quoteCurrency] = selectedPair.split('/');
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–ª–∏—è–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ –ø–∞—Ä—É
        let direction;
        
        if (currency === baseCurrency) {
            // –ù–æ–≤–æ—Å—Ç—å –ø–æ –±–∞–∑–æ–≤–æ–π –≤–∞–ª—é—Ç–µ
            switch (factType) {
                case 'GFP': // –ü–æ–∑–∏—Ç–∏–≤–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å - –±–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ —É–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è
                    direction = 'buy'; // CALL
                    break;
                case 'RFP': // –ù–µ–≥–∞—Ç–∏–≤–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å - –±–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ –æ—Å–ª–∞–±–µ–≤–∞–µ—Ç
                    direction = 'sell'; // PUT
                    break;
                default:
                    direction = 'none';
            }
        } else if (currency === quoteCurrency) {
            // –ù–æ–≤–æ—Å—Ç—å –ø–æ –∫–æ—Ç–∏—Ä—É–µ–º–æ–π –≤–∞–ª—é—Ç–µ - –æ–±—Ä–∞—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞
            switch (factType) {
                case 'GFP': // –ü–æ–∑–∏—Ç–∏–≤–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å –ø–æ –∫–æ—Ç–∏—Ä—É–µ–º–æ–π –≤–∞–ª—é—Ç–µ - –ø–∞—Ä–∞ –ø–∞–¥–∞–µ—Ç
                    direction = 'sell'; // PUT
                    break;
                case 'RFP': // –ù–µ–≥–∞—Ç–∏–≤–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å –ø–æ –∫–æ—Ç–∏—Ä—É–µ–º–æ–π –≤–∞–ª—é—Ç–µ - –ø–∞—Ä–∞ —Ä–∞—Å—Ç–µ—Ç
                    direction = 'buy'; // CALL
                    break;
                default:
                    direction = 'none';
            }
        } else {
            // –ù–æ–≤–æ—Å—Ç—å –ø–æ –≤–∞–ª—é—Ç–µ, –Ω–µ –≤—Ö–æ–¥—è—â–µ–π –≤ –ø–∞—Ä—É - –≤–ª–∏—è–Ω–∏–µ –∫–æ—Å–≤–µ–Ω–Ω–æ–µ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–µ —Ä—ã–Ω–æ—á–Ω—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏
            switch (factType) {
                case 'GFP':
                    direction = 'buy'; // –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ–±—ã—á–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Ä–∏—Å–∫
                    break;
                case 'RFP':
                    direction = 'sell'; // –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ —Å–Ω–∏–∂–∞—é—Ç –∞–ø–ø–µ—Ç–∏—Ç –∫ —Ä–∏—Å–∫—É
                    break;
                default:
                    direction = 'none';
            }
        }
        
        return direction;
    },
    
    getTradeLogicExplanation(currency, factType, selectedPair, direction) {
        const [baseCurrency, quoteCurrency] = selectedPair.split('/');
        const factTypeNames = {
            'GFP': '–ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π (–∑–µ–ª–µ–Ω—ã–π)',
            'RFP': '–Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π (–∫—Ä–∞—Å–Ω—ã–π)', 
            'BFP': '–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π (—á–µ—Ä–Ω—ã–π)'
        };
        
        const factName = factTypeNames[factType] || factType;
        
        // –î–ª—è BFP –∏–ª–∏ –∫–æ–≥–¥–∞ direction === 'none'
        if (direction === 'none' || factType === 'BFP') {
            if (currency === baseCurrency) {
                return `${factName} —Ñ–∞–∫—Ç –ø–æ ${currency} (–±–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ –≤ ${selectedPair}) ‚Üí –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –≤–∞–ª—é—Ç—É ‚Üí –Ω–µ—Ç —á–µ—Ç–∫–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏ ‚Üí —Ç–æ—Ä–≥–æ–≤–ª—è –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è`;
            } else if (currency === quoteCurrency) {
                return `${factName} —Ñ–∞–∫—Ç –ø–æ ${currency} (–∫–æ—Ç–∏—Ä—É–µ–º–∞—è –≤–∞–ª—é—Ç–∞ –≤ ${selectedPair}) ‚Üí –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –≤–∞–ª—é—Ç—É ‚Üí –Ω–µ—Ç —á–µ—Ç–∫–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏ ‚Üí —Ç–æ—Ä–≥–æ–≤–ª—è –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è`;
            } else {
                return `${factName} —Ñ–∞–∫—Ç –ø–æ ${currency} (–Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ –ø–∞—Ä—É ${selectedPair}) ‚Üí –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å –±–µ–∑ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ ‚Üí —Ç–æ—Ä–≥–æ–≤–ª—è –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è`;
            }
        }
        
        const directionName = direction === 'buy' ? 'CALL (–≤–≤–µ—Ä—Ö)' : 'PUT (–≤–Ω–∏–∑)';
        
        if (currency === baseCurrency) {
            return `${factName} —Ñ–∞–∫—Ç –ø–æ ${currency} (–±–∞–∑–æ–≤–∞—è –≤–∞–ª—é—Ç–∞ –≤ ${selectedPair}) ‚Üí ${currency} ${factType === 'GFP' ? '—É–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è' : '–æ—Å–ª–∞–±–µ–≤–∞–µ—Ç'} ‚Üí –ø–∞—Ä–∞ ${selectedPair} –∏–¥–µ—Ç ${direction === 'buy' ? '–≤–≤–µ—Ä—Ö' : '–≤–Ω–∏–∑'} ‚Üí ${directionName}`;
        } else if (currency === quoteCurrency) {
            return `${factName} —Ñ–∞–∫—Ç –ø–æ ${currency} (–∫–æ—Ç–∏—Ä—É–µ–º–∞—è –≤–∞–ª—é—Ç–∞ –≤ ${selectedPair}) ‚Üí ${currency} ${factType === 'GFP' ? '—É–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è' : '–æ—Å–ª–∞–±–µ–≤–∞–µ—Ç'} ‚Üí –ø–∞—Ä–∞ ${selectedPair} –∏–¥–µ—Ç ${direction === 'buy' ? '–≤–≤–µ—Ä—Ö' : '–≤–Ω–∏–∑'} (–æ–±—Ä–∞—Ç–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è) ‚Üí ${directionName}`;
        } else {
            return `${factName} —Ñ–∞–∫—Ç –ø–æ ${currency} (–Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ –ø–∞—Ä—É ${selectedPair}) ‚Üí –∫–æ—Å–≤–µ–Ω–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ —á–µ—Ä–µ–∑ –æ–±—â–∏–µ —Ä—ã–Ω–æ—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è ‚Üí ${directionName}`;
        }
    }
};

// ============================================================================
// –ú–û–î–£–õ–¨ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –î–ê–ù–ù–´–ú–ò
// ============================================================================
DK.data = {
    async clearAll() {
        DK.log.info("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è...");
        
        try {
            await chrome.storage.local.clear();
            DK.log.success("‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã");
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    },
    
    async exportData() {
        DK.log.info("üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö...");
        
        try {
            const data = await chrome.storage.local.get(null);
            const exportData = JSON.stringify(data, null, 2);
            
            DK.log.info("üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞:");
            DK.log.info(exportData);
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    }
};

// ============================================================================
// –ú–û–î–£–õ–¨ –ë–†–ê–£–ó–ï–†–ê
// ============================================================================
DK.browser = {
    async getAllTabs() {
        DK.log.info("üìë –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫...");
        
        try {
            const tabs = await chrome.tabs.query({});
            DK.log.info(`üìä –ù–∞–π–¥–µ–Ω–æ –≤–∫–ª–∞–¥–æ–∫: ${tabs.length}`);
            
            tabs.slice(0, 10).forEach((tab, index) => {
                DK.log.info(`${index + 1}. ${tab.title} - ${tab.url}`);
            });
            
            if (tabs.length > 10) {
                DK.log.info(`... –∏ –µ—â–µ ${tabs.length - 10} –≤–∫–ª–∞–¥–æ–∫`);
            }
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    },
    
    async findBrokerTabs() {
        DK.log.info("üè¶ –ü–æ–∏—Å–∫ –±—Ä–æ–∫–µ—Ä—Å–∫–∏—Ö –≤–∫–ª–∞–¥–æ–∫...");
        
        try {
            const tabs = await chrome.tabs.query({ url: "*://*/*" });
            const brokerTabs = [];
            
            for (const tab of tabs) {
                if (tab.url && !tab.url.startsWith('chrome://') && !tab.url.startsWith('chrome-extension://')) {
                    try {
                        const results = await chrome.scripting.executeScript({
                            target: { tabId: tab.id },
                            func: () => {
                                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–∑–Ω–∞–∫–∏ –±—Ä–æ–∫–µ—Ä—Å–∫–æ–≥–æ —Å–∞–π—Ç–∞
                                const bidElement = document.querySelector('.info__id');
                                const themeColorMeta = document.querySelector('meta[name="theme-color"][content="#1F1F23"]');
                                
                                return !!(bidElement || themeColorMeta);
                            }
                        });
                        
                        if (results && results[0] && results[0].result) {
                            brokerTabs.push(tab);
                        }
                    } catch (err) {
                        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–∫
                    }
                }
            }
            
            DK.log.info(`üè¶ –ù–∞–π–¥–µ–Ω–æ –±—Ä–æ–∫–µ—Ä—Å–∫–∏—Ö –≤–∫–ª–∞–¥–æ–∫: ${brokerTabs.length}`);
            brokerTabs.forEach((tab, index) => {
                DK.log.info(`${index + 1}. ${tab.title} - ${tab.url}`);
            });
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    },
    
    async testNotification() {
        DK.log.info("üîî –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...");
        
        try {
            await chrome.notifications.create({
                type: 'basic',
                iconUrl: 'icons/icon48.png',
                title: 'DK DEBUG Console',
                message: '–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑ debug –∫–æ–Ω—Å–æ–ª–∏'
            });
            
            DK.log.success("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");
        } catch (error) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
        }
    }
};

// ============================================================================
// –û–°–ù–û–í–ù–´–ï –°–ò–°–¢–ï–ú–ù–´–ï –§–£–ù–ö–¶–ò–ò
// ============================================================================
DK.diagnose = async function() {
    DK.log.info("üîç === –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ ===");
    
    try {
        // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        DK.log.info("üì¶ 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è...");
        DK.log.info(`üîñ ID —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è: ${chrome.runtime.id}`);
        
        // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ storage
        DK.log.info("üíæ 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞...");
        const storage = await chrome.storage.local.get(null);
        const keys = Object.keys(storage);
        DK.log.info(`üìä –ó–∞–ø–∏—Å–µ–π –≤ storage: ${keys.length}`);
        keys.forEach(key => {
            DK.log.info(`   - ${key}: ${typeof storage[key]} ${Array.isArray(storage[key]) ? `(${storage[key].length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤)` : ''}`);
        });
        
        // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ background script
        DK.log.info("‚öôÔ∏è 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ background script...");
        try {
            const bgResponse = await chrome.runtime.sendMessage({ action: "getTradingState" });
            if (bgResponse) {
                DK.log.success("‚úÖ Background script –æ—Ç–≤–µ—á–∞–µ—Ç");
                DK.log.info(`üìä –¢–æ—Ä–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞: ${bgResponse.isActive ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}`);
            } else {
                DK.log.warn("‚ö†Ô∏è Background script –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç");
            }
        } catch (err) {
            DK.log.error(`‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å background: ${err.message}`);
        }
        
        // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        DK.log.info("üîê 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...");
        const authData = await chrome.storage.local.get(['authToken', 'USER_BID', 'expected_bid']);
        DK.log.info(`üîë –¢–æ–∫–µ–Ω: ${authData.authToken ? '–ï—Å—Ç—å' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
        DK.log.info(`üÜî BID: ${authData.USER_BID || '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
        DK.log.info(`üìù –û–∂–∏–¥–∞–µ–º—ã–π BID: ${authData.expected_bid || '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
        
        // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª–∞–¥–æ–∫
        DK.log.info("üåê 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª–∞–¥–æ–∫...");
        const tabs = await chrome.tabs.query({});
        const investingTabs = tabs.filter(tab => tab.url && tab.url.includes('investing.com'));
        const brokerTabs = tabs.filter(tab => tab.url && (tab.url.includes('broker') || tab.url.includes('trading')));
        
        DK.log.info(`üìä –í—Å–µ–≥–æ –≤–∫–ª–∞–¥–æ–∫: ${tabs.length}`);
        DK.log.info(`üìà Investing.com: ${investingTabs.length}`);
        DK.log.info(`üè¶ –ë—Ä–æ–∫–µ—Ä—Å–∫–∏—Ö: ${brokerTabs.length}`);
        
        DK.log.success("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
        
    } catch (error) {
        DK.log.error(`‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: ${error.message}`);
    }
};

DK.status = async function() {
    DK.log.info("üìä === –°–¢–ê–¢–£–° –ö–û–ú–ü–û–ù–ï–ù–¢–û–í ===");
    
    const components = [
        { name: "Extension", check: () => !!chrome.runtime.id },
        { name: "Storage API", check: () => !!chrome.storage },
        { name: "Tabs API", check: () => !!chrome.tabs },
        { name: "Scripting API", check: () => !!chrome.scripting },
        { name: "Notifications API", check: () => !!chrome.notifications }
    ];
    
    components.forEach(component => {
        try {
            const status = component.check();
            DK.log.info(`${status ? '‚úÖ' : '‚ùå'} ${component.name}: ${status ? 'OK' : '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}`);
        } catch (error) {
            DK.log.error(`‚ùå ${component.name}: –û—à–∏–±–∫–∞ - ${error.message}`);
        }
    });
};

DK.reset = async function() {
    DK.log.info("üîÑ === –ü–û–õ–ù–´–ô –°–ë–†–û–° –°–ò–°–¢–ï–ú–´ ===");
    
    try {
        // 1. –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ç–æ—Ä–≥–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
        await DK.trading.deactivate();
        
        // 2. –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        await chrome.storage.local.clear();
        
        // 3. –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ UI
        DK.updateStatus("–°–∏—Å—Ç–µ–º–∞ —Å–±—Ä–æ—à–µ–Ω–∞", false);
        
        DK.log.success("‚úÖ –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω");
    } catch (error) {
        DK.log.error(`‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞: ${error.message}`);
    }
};

DK.resetTradingSystem = async function() {
    DK.log.info("üîÑ === –°–ë–†–û–° –¢–û–†–ì–û–í–û–ô –°–ò–°–¢–ï–ú–´ (DEBUG MODE) ===");
    
    try {
        const response = await chrome.runtime.sendMessage({ action: "resetTradingSystem" });
        
        if (response?.success) {
            DK.log.success("‚úÖ –¢–æ—Ä–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–±—Ä–æ—à–µ–Ω–∞ –≤ background");
            DK.updateStatus("–¢–æ—Ä–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–±—Ä–æ—à–µ–Ω–∞", false);
        } else {
            DK.log.error("‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã");
        }
    } catch (error) {
        DK.log.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    }
};

// ============================================================================
// –£–¢–ò–õ–ò–¢–ê–†–ù–´–ï –§–£–ù–ö–¶–ò–ò
// ============================================================================
DK.updateStatus = function(message, isActive = false) {
    const statusDot = document.getElementById('statusDot');
    const statusText = document.getElementById('statusText');
    
    if (statusDot) {
        statusDot.className = `status-dot ${isActive ? 'active' : ''}`;
    }
    
    if (statusText) {
        statusText.textContent = message;
    }
};

DK.loadExtensionInfo = async function() {
    try {
        const manifest = chrome.runtime.getManifest();
        const versionInfo = document.getElementById('versionInfo');
        if (versionInfo) {
            versionInfo.textContent = `v${manifest.version} (${manifest.name})`;
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–∏:', error);
    }
};

// ============================================================================
// UI –§–£–ù–ö–¶–ò–ò
// ============================================================================
function toggleAccordion(targetId) {
    const content = document.getElementById(targetId);
    if (content) {
        const isActive = content.classList.contains('active');
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∞–∫–∫–æ—Ä–¥–µ–æ–Ω—ã
        document.querySelectorAll('.accordion-content').forEach(el => {
            el.classList.remove('active');
        });
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π, –µ—Å–ª–∏ –æ–Ω –Ω–µ –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω
        if (!isActive) {
            content.classList.add('active');
        }
    }
}

function updateCurrencyPairs(selectedCurrency) {
    const pairSelect = document.getElementById('testPair');
    if (!pairSelect) return;

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –ø–∞—Ä—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã
    const currencyPairs = {
        "EUR": [
            { value: "EUR/USD", text: "EUR/USD" },
            { value: "EUR/GBP", text: "EUR/GBP" },
            { value: "EUR/JPY", text: "EUR/JPY" },
            { value: "EUR/CHF", text: "EUR/CHF" }
        ],
        "USD": [
            { value: "EUR/USD", text: "EUR/USD" },
            { value: "USD/JPY", text: "USD/JPY" },
            { value: "GBP/USD", text: "GBP/USD" },
            { value: "AUD/USD", text: "AUD/USD" },
            { value: "USD/CAD", text: "USD/CAD" },
            { value: "USD/CHF", text: "USD/CHF" },
            { value: "NZD/USD", text: "NZD/USD" }
        ],
        "GBP": [
            { value: "GBP/USD", text: "GBP/USD" },
            { value: "EUR/GBP", text: "EUR/GBP" },
            { value: "GBP/JPY", text: "GBP/JPY" },
            { value: "GBP/CHF", text: "GBP/CHF" }
        ],
        "JPY": [
            { value: "USD/JPY", text: "USD/JPY" },
            { value: "EUR/JPY", text: "EUR/JPY" },
            { value: "GBP/JPY", text: "GBP/JPY" },
            { value: "AUD/JPY", text: "AUD/JPY" },
            { value: "CAD/JPY", text: "CAD/JPY" }
        ],
        "AUD": [
            { value: "AUD/USD", text: "AUD/USD" },
            { value: "AUD/JPY", text: "AUD/JPY" },
            { value: "AUD/CAD", text: "AUD/CAD" }
        ],
        "CAD": [
            { value: "USD/CAD", text: "USD/CAD" },
            { value: "CAD/JPY", text: "CAD/JPY" },
            { value: "AUD/CAD", text: "AUD/CAD" }
        ],
        "CHF": [
            { value: "USD/CHF", text: "USD/CHF" },
            { value: "EUR/CHF", text: "EUR/CHF" },
            { value: "GBP/CHF", text: "GBP/CHF" }
        ]
    };

    // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã –∏–ª–∏ –≤—Å–µ –ø–∞—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const pairs = currencyPairs[selectedCurrency] || [
        { value: "EUR/USD", text: "EUR/USD" },
        { value: "USD/JPY", text: "USD/JPY" },
        { value: "GBP/USD", text: "GBP/USD" },
        { value: "USD/CAD", text: "USD/CAD" },
        { value: "AUD/USD", text: "AUD/USD" },
        { value: "USD/CHF", text: "USD/CHF" }
    ];

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –≤—ã–±–æ—Ä
    const currentValue = pairSelect.value;

    // –û—á–∏—â–∞–µ–º –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫
    pairSelect.innerHTML = '';
    pairs.forEach(pair => {
        const option = document.createElement('option');
        option.value = pair.value;
        option.textContent = pair.text;
        pairSelect.appendChild(option);
    });

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±–æ—Ä –∏–ª–∏ –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø–∞—Ä—É
    if (pairs.some(pair => pair.value === currentValue)) {
        pairSelect.value = currentValue;
    } else {
        pairSelect.value = pairs[0].value;
    }

    // –õ–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
    if (window.DK && DK.log) {
        DK.log.info(`üí± –í–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è ${selectedCurrency}: ${pairs.length} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∞—Ä`);
    }
}

// ============================================================================
// –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô
// ============================================================================
function setupEventListeners() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–æ–≤
    document.querySelectorAll('.accordion-header[data-target]').forEach(header => {
        header.addEventListener('click', function() {
            const targetId = this.getAttribute('data-target');
            toggleAccordion(targetId);
        });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    document.querySelectorAll('[data-action]').forEach(button => {
        button.addEventListener('click', function() {
            const action = this.getAttribute('data-action');
            handleAction(action);
        });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä
    const currencySelect = document.getElementById('testCurrency');
    if (currencySelect) {
        currencySelect.addEventListener('change', function() {
            updateCurrencyPairs(this.value);
        });
    }
}

function handleAction(action) {
    try {
        switch (action) {
            // –¢–æ—Ä–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞
            case 'trading-activate':
                DK.trading.activate();
                break;
            case 'trading-deactivate':
                DK.trading.deactivate();
                break;
            case 'trading-getState':
                DK.trading.getState();
                break;
            case 'trading-buy':
                DK.trading.buy();
                break;
            case 'trading-sell':
                DK.trading.sell();
                break;
            
            // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
            case 'test-simulateNews':
                DK.test.simulateNews();
                break;
            case 'test-tradingCycle':
                DK.test.tradingCycle();
                break;
            case 'test-loadSampleNews':
                DK.test.loadSampleNews();
                break;
            case 'test-backgroundConnection':
                DK.test.backgroundConnection();
                break;
            
            // –ù–æ–≤–æ—Å—Ç–∏
            case 'news-update':
                DK.news.update();
                break;
            case 'news-show':
                DK.news.show();
                break;
            case 'news-clearProcessed':
                DK.news.clearProcessed();
                break;
            
            // –î–∞–Ω–Ω—ã–µ
            case 'data-clearAll':
                DK.data.clearAll();
                break;
            
            // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
            case 'auth-checkBID':
                DK.auth.checkBID();
                break;
            case 'auth-forceBID':
                DK.auth.forceBID();
                break;
            case 'auth-verifySubscription':
                DK.auth.verifySubscription();
                break;
            case 'auth-logout':
                DK.auth.logout();
                break;
            
            // –°–∏—Å—Ç–µ–º–∞
            case 'system-diagnose':
                DK.diagnose();
                break;
            case 'system-status':
                DK.status();
                break;
            case 'system-reset':
                DK.reset();
                break;
            case 'system-resetTrading':
                DK.resetTradingSystem();
                break;
            
            // –ë—Ä–∞—É–∑–µ—Ä
            case 'browser-getAllTabs':
                DK.browser.getAllTabs();
                break;
            case 'browser-findBrokerTabs':
                DK.browser.findBrokerTabs();
                break;
            case 'browser-testNotification':
                DK.browser.testNotification();
                break;
            
            // –õ–æ–≥–∏
            case 'log-clear':
                DK.log.clear();
                break;
            
            default:
                DK.log.warn(`‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ${action}`);
        }
    } catch (error) {
        DK.log.error(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è ${action}: ${error.message}`);
    }
}

// ============================================================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
// ============================================================================
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ DK Debug Console - DOM –∑–∞–≥—Ä—É–∂–µ–Ω');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º DK –æ–±—ä–µ–∫—Ç
    if (window.DK) {
        DK.init();
    } else {
        console.error('‚ùå DK –æ–±—ä–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞–ª—é—Ç–Ω—ã–µ –ø–∞—Ä—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    setTimeout(() => {
        const defaultCurrency = document.getElementById('testCurrency')?.value || 'EUR';
        updateCurrencyPairs(defaultCurrency);
    }, 100);
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –∞–∫–∫–æ—Ä–¥–µ–æ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    setTimeout(() => {
        toggleAccordion('trading-controls');
    }, 500);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', function(event) {
    if (window.DK && DK.log) {
        DK.log.error(`üí• –û—à–∏–±–∫–∞ JavaScript: ${event.error?.message || event.message}`);
    }
});

console.log('üì¶ DK Debug Console - –°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω');
