// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
let tradingSystem = {
  isActive: false,
  selectedNews: null,
  selectedAsset: "",
  selectedPair: "",
  lastProcessedFact: null,
  processedNews: {},
  initialNewsStates: {},
  autoClickInterval: null,
  monitoringInterval: null,
  startTime: null,
  MAX_TRADING_TIME: 24 * 60 * 60 * 1000 // 24 —á–∞—Å–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
};

// –¢–æ—Ä–≥–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞
const TRADING_RULES = {
  "AUD": {
    "EUR/AUD": {"green": "sell", "red": "buy"},
    "AUD/USD": {"green": "buy", "red": "sell"},
    "AUD/CHF": {"green": "buy", "red": "sell"},
    "AUD/CAD": {"green": "buy", "red": "sell"},
    "GBP/AUD": {"green": "sell", "red": "buy"},
    "AUD/JPY": {"green": "buy", "red": "sell"}
  },
  "GBP": {
    "GBP/CAD": {"green": "buy", "red": "sell"},
    "GBP/USD": {"green": "buy", "red": "sell"},
    "GBP/CHF": {"green": "buy", "red": "sell"},
    "GBP/JPY": {"green": "buy", "red": "sell"},
    "EUR/GBP": {"green": "sell", "red": "buy"},
    "GBP/AUD": {"green": "buy", "red": "sell"}
  },
  "EUR": {
    "EUR/AUD": {"green": "buy", "red": "sell"},
    "EUR/USD": {"green": "buy", "red": "sell"},
    "EUR/JPY": {"green": "buy", "red": "sell"},
    "EUR/CAD": {"green": "buy", "red": "sell"},
    "EUR/CHF": {"green": "buy", "red": "sell"},
    "EUR/GBP": {"green": "buy", "red": "sell"}
  },
  "USD": {
    "EUR/USD": {"green": "sell", "red": "buy"},
    "AUD/USD": {"green": "sell", "red": "buy"},
    "USD/CAD": {"green": "buy", "red": "sell"},
    "GBP/USD": {"green": "sell", "red": "buy"},
    "USD/JPY": {"green": "buy", "red": "sell"},
    "USD/CHF": {"green": "buy", "red": "sell"}
  },
  "JPY": {
    "EUR/JPY": {"green": "sell", "red": "buy"},
    "USD/JPY": {"green": "sell", "red": "buy"},
    "CHF/JPY": {"green": "sell", "red": "buy"},
    "GBP/JPY": {"green": "sell", "red": "buy"},
    "AUD/JPY": {"green": "sell", "red": "buy"},
    "CAD/JPY": {"green": "sell", "red": "buy"}
  },
  "CHF": {
    "AUD/CHF": {"green": "sell", "red": "buy"},
    "GBP/CHF": {"green": "sell", "red": "buy"},
    "EUR/CHF": {"green": "sell", "red": "buy"},
    "CHF/JPY": {"green": "buy", "red": "sell"},
    "USD/CHF": {"green": "sell", "red": "buy"},
    "CAD/CHF": {"green": "sell", "red": "buy"}
  },
  "CAD": {
    "GBP/CAD": {"green": "sell", "red": "buy"},
    "EUR/CAD": {"green": "sell", "red": "buy"},
    "USD/CAD": {"green": "sell", "red": "buy"},
    "CAD/CHF": {"green": "buy", "red": "sell"},
    "AUD/CAD": {"green": "sell", "red": "buy"},
    "CAD/JPY": {"green": "buy", "red": "sell"}
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–æ—Ä–≥–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —á–µ—Ä–µ–∑ content script
async function executeTrade(action, newsItem) {
  console.log(`[executeTrade] üöÄ –ù–ê–ß–ê–õ–û –¢–û–†–ì–û–í–û–ô –û–ü–ï–†–ê–¶–ò–ò: ${action.toUpperCase()}`);
  console.log(`[executeTrade] üì∞ –ù–æ–≤–æ—Å—Ç—å: ${newsItem?.event || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
  console.log(`[executeTrade] üí± –í–∞–ª—é—Ç–∞: ${newsItem?.currency || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
  console.log(`[executeTrade] üìä –§–∞–∫—Ç: ${newsItem?.actual || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} (${newsItem?.actualType || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'})`);
  console.log(`[executeTrade] ‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleTimeString()}`);

  if (isNewsProcessed(newsItem)) {
    console.log("[executeTrade] ‚ùå –≠—Ç–∞ –Ω–æ–≤–æ—Å—Ç—å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º");
    return false;
  }

  try {
    const tabs = await chrome.tabs.query({ url: "*://*/*" });
    console.log(`[executeTrade] üîç –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É ${tabs.length} –≤–∫–ª–∞–¥–æ–∫ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –±—Ä–æ–∫–µ—Ä—Å–∫–∏—Ö —Å–∞–π—Ç–æ–≤`);
    
    // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–∫–∞—Ö –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    const tabsInfo = tabs.slice(0, 10).map(tab => ({
      id: tab.id,
      url: tab.url?.substring(0, 50) + '...',
      title: tab.title?.substring(0, 30) + '...',
      status: tab.status,
      active: tab.active
    }));
    console.log('[executeTrade] üìë –ü–µ—Ä–≤—ã–µ 10 –≤–∫–ª–∞–¥–æ–∫:', JSON.stringify(tabsInfo, null, 2));
    
    // –ò—â–µ–º –≤–∫–ª–∞–¥–∫—É –±—Ä–æ–∫–µ—Ä–∞ —Å –ø–æ–º–æ—â—å—é —Ç–æ–π –∂–µ –ª–æ–≥–∏–∫–∏, —á—Ç–æ –∏ –≤ checkBrokerMeta
    let brokerTab = null;
    let checkedTabs = 0;
    let errorTabs = 0;
    
    console.log('[executeTrade] üîç –ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫ –±—Ä–æ–∫–µ—Ä—Å–∫–∏—Ö –≤–∫–ª–∞–¥–æ–∫...');
    
    for (const tab of tabs) {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
      if (!tab.url || tab.url.startsWith('chrome://') || tab.url.startsWith('chrome-extension://')) {
        console.log(`[executeTrade] ‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏: ${tab.url?.substring(0, 50)}`);
        continue;
      }
      
      checkedTabs++;
      console.log(`[executeTrade] üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª–∞–¥–∫–∏ ${checkedTabs}: ID=${tab.id}, URL=${tab.url?.substring(0, 80)}, Status=${tab.status}`);
      
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–∫–ª–∞–¥–∫–∞ –±—Ä–æ–∫–µ—Ä—Å–∫–∏–º —Å–∞–π—Ç–æ–º
        const results = await new Promise((resolve) => {
          chrome.scripting.executeScript({
            target: { tabId: tab.id },
            func: checkBrokerMeta
          }, (results) => {
            if (chrome.runtime.lastError) {
              console.log(`[executeTrade] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∫–ª–∞–¥–∫—É ${tab.id}: ${chrome.runtime.lastError.message}`);
              resolve(false);
            } else if (results && results[0]) {
              console.log(`[executeTrade] ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∫–ª–∞–¥–∫–∏ ${tab.id}: ${results[0].result}`);
              resolve(results[0].result);
            } else {
              console.log(`[executeTrade] ‚ö†Ô∏è –ü—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ ${tab.id}`);
              resolve(false);
            }
          });
        });
        
        if (results) {
          console.log(`[executeTrade] üéØ –ù–ê–ô–î–ï–ù –±—Ä–æ–∫–µ—Ä—Å–∫–∏–π —Å–∞–π—Ç –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ${tab.id}: ${tab.url}`);
          console.log(`[executeTrade] üìä –°—Ç–∞—Ç—É—Å –Ω–∞–π–¥–µ–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏: ${tab.status}, –ê–∫—Ç–∏–≤–Ω–∞—è: ${tab.active}`);
          brokerTab = tab;
          break; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É
        } else {
          console.log(`[executeTrade] ‚ùå –í–∫–ª–∞–¥–∫–∞ ${tab.id} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –±—Ä–æ–∫–µ—Ä—Å–∫–æ–π`);
        }
      } catch (error) {
        errorTabs++;
        console.log(`[executeTrade] üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–∫–ª–∞–¥–∫–∏ ${tab.id}: ${error.message}`);
      }
    }

    console.log(`[executeTrade] üìä –ò–¢–û–ì–ò –ü–û–ò–°–ö–ê: –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –≤–∫–ª–∞–¥–æ–∫: ${checkedTabs}, –û—à–∏–±–æ–∫: ${errorTabs}, –ù–∞–π–¥–µ–Ω–æ –±—Ä–æ–∫–µ—Ä—Å–∫–∏—Ö: ${brokerTab ? 1 : 0}`);

    if (!brokerTab) {
      console.error("[executeTrade] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ –±—Ä–æ–∫–µ—Ä–∞!");
      console.error(`[executeTrade] üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –í—Å–µ–≥–æ –≤–∫–ª–∞–¥–æ–∫: ${tabs.length}, –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ: ${checkedTabs}, –û—à–∏–±–æ–∫: ${errorTabs}`);
      return false;
    }

    console.log(`[executeTrade] üéØ –ò—Å–ø–æ–ª—å–∑—É—é –±—Ä–æ–∫–µ—Ä—Å–∫—É—é –≤–∫–ª–∞–¥–∫—É: ID=${brokerTab.id}, URL=${brokerTab.url}`);

    const selector = action === "buy" 
      ? ".action-high-low.button-call-wrap a.btn.btn-call" 
      : ".action-high-low.button-put-wrap a.btn.btn-put";

    console.log(`[executeTrade] üéØ –°–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è ${action}: ${selector}`);
    console.log(`[executeTrade] üîÑ –í—ã–ø–æ–ª–Ω—è—é –∏–Ω—ä–µ–∫—Ü–∏—é —Å–∫—Ä–∏–ø—Ç–∞ –≤ –≤–∫–ª–∞–¥–∫—É ${brokerTab.id}...`);

    const results = await chrome.scripting.executeScript({
      target: { tabId: brokerTab.id },
      func: (sel, actionType) => {
        console.log(`[DK-Injected] üöÄ –°–∫—Ä–∏–ø—Ç –∏–Ω—ä–µ—Ü–∏—Ä–æ–≤–∞–Ω! –ò—â—É —ç–ª–µ–º–µ–Ω—Ç: ${sel}`);
        console.log(`[DK-Injected] üîç –î–µ–π—Å—Ç–≤–∏–µ: ${actionType}`);
        console.log(`[DK-Injected] üåê URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${window.location.href}`);
        console.log(`[DK-Injected] üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: ${document.readyState}`);
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ DOM
        const bodyExists = !!document.body;
        const elementCount = document.querySelectorAll('*').length;
        console.log(`[DK-Injected] üìã Body exists: ${bodyExists}, –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ DOM: ${elementCount}`);
        
        const element = document.querySelector(sel);
        console.log(`[DK-Injected] üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–∞: ${element ? '–ù–ê–ô–î–ï–ù' : '–ù–ï –ù–ê–ô–î–ï–ù'}`);
        
        if (element) {
          console.log(`[DK-Injected] ‚úÖ –≠–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω:`, {
            tagName: element.tagName,
            className: element.className,
            id: element.id,
            visible: element.offsetParent !== null,
            disabled: element.disabled,
            style: element.style.cssText
          });
          
          const event = new MouseEvent('click', {
            bubbles: true,
            cancelable: true,
            view: window
          });
          
          console.log(`[DK-Injected] üëÜ –í—ã–ø–æ–ª–Ω—è—é –∫–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É...`);
          element.dispatchEvent(event);
          
          console.log(`[DK-Injected] ‚úÖ –ö–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ –¥–ª—è ${actionType}: ${sel}`);
          return { success: true, elementFound: true, clickExecuted: true };
        } else {
          console.warn(`[DK-Injected] ‚ùå –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${sel}`);
          
          // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
          const alternativeSelectors = [
            '.btn-call', '.btn-put', 
            '[data-action="call"]', '[data-action="put"]',
            '.call-button', '.put-button',
            '.trade-button', '.trading-button'
          ];
          
          console.log(`[DK-Injected] üîç –ü–æ–∏—Å–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤...`);
          alternativeSelectors.forEach(altSel => {
            const altElement = document.querySelector(altSel);
            if (altElement) {
              console.log(`[DK-Injected] üîç –ù–∞–π–¥–µ–Ω –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç: ${altSel}`, altElement);
            }
          });
          
          return { success: false, elementFound: false, clickExecuted: false };
        }
      },
      args: [selector, action]
    });

    console.log(`[executeTrade] üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ò–ù–™–ï–ö–¶–ò–ò:`, results);

    if (results && results[0]) {
      const result = results[0].result;
      console.log(`[executeTrade] üìã –î–µ—Ç–∞–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:`, result);
      
      if (result && result.success) {
        console.log(`[executeTrade] üéâ –£–°–ü–ï–•! –í—ã–ø–æ–ª–Ω–µ–Ω–∞ ${action === "buy" ? "–ø–æ–∫—É–ø–∫–∞" : "–ø—Ä–æ–¥–∞–∂–∞"}`);
        markNewsAsProcessed(newsItem);
        
        // –°–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        chrome.notifications.create({
          type: 'basic',
          iconUrl: 'icons/icon48.png',
          title: 'DK NEWS HUNTERS',
          message: `–ê–≤—Ç–æ-—Ç–æ—Ä–≥–æ–≤–ª—è: ${action === "buy" ? "–ü–æ–∫—É–ø–∫–∞" : "–ü—Ä–æ–¥–∞–∂–∞"} (${tradingSystem.selectedAsset}/${tradingSystem.selectedPair})`
        });

        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        const tradeLog = {
          timestamp: new Date().toISOString(),
          action: action === "buy" ? "–ü–æ–∫—É–ø–∫–∞" : "–ü—Ä–æ–¥–∞–∂–∞",
          asset: tradingSystem.selectedAsset,
          pair: tradingSystem.selectedPair,
          news: newsItem.event,
          factType: newsItem.actualType,
          debugInfo: {
            brokerTabId: brokerTab.id,
            brokerUrl: brokerTab.url,
            selector: selector,
            elementFound: result.elementFound,
            clickExecuted: result.clickExecuted
          }
        };

        console.log(`[executeTrade] üìù –°–æ—Ö—Ä–∞–Ω—è—é –ª–æ–≥ –æ–ø–µ—Ä–∞—Ü–∏–∏:`, tradeLog);

        chrome.storage.local.get(['tradeHistory'], (result) => {
          const history = result.tradeHistory || [];
          history.push(tradeLog);
          chrome.storage.local.set({ tradeHistory: history });
          console.log(`[executeTrade] üíæ –õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω, –≤—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${history.length}`);
        });

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Ç–æ—Ä–≥–æ–≤–ª–∏
        console.log(`[executeTrade] ‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...`);
        setTimeout(() => {
          deactivateTradingSystem("–¢–æ—Ä–≥–æ–≤–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞");
        }, 5000);

        return true;
      } else {
        console.error(`[executeTrade] ‚ùå –ù–ï–£–î–ê–ß–ê: –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –∫–ª–∏–∫ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω`);
        console.error(`[executeTrade] üìä –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:`, {
          elementFound: result?.elementFound || false,
          clickExecuted: result?.clickExecuted || false,
          selector: selector,
          brokerTabId: brokerTab.id,
          brokerUrl: brokerTab.url
        });
      }
    } else {
      console.error(`[executeTrade] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ –ø–æ–ª—É—á–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç –∏–Ω—ä–µ–∫—Ü–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞`);
      console.error(`[executeTrade] üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:`, results);
    }
    
    return false;
  } catch (error) {
    console.error(`[executeTrade] üí• –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏: ${error.message}`);
    console.error(`[executeTrade] üìä Stack trace:`, error.stack);
    console.error(`[executeTrade] üîß –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:`, {
      action,
      newsItem,
      selectedAsset: tradingSystem.selectedAsset,
      selectedPair: tradingSystem.selectedPair
    });
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π —Ç–æ—Ä–≥–æ–≤–ª–∏
function checkTradingConditions(newsItem) {
  console.log(`[checkTradingConditions] üîç –ü–†–û–í–ï–†–ö–ê –£–°–õ–û–í–ò–ô –¢–û–†–ì–û–í–õ–ò`);
  console.log(`[checkTradingConditions] üì∞ –ù–æ–≤–æ—Å—Ç—å: ${newsItem?.event || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
  console.log(`[checkTradingConditions] üí± –í–∞–ª—é—Ç–∞: ${newsItem?.currency || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
  console.log(`[checkTradingConditions] üìä –§–∞–∫—Ç: ${newsItem?.actual || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} (${newsItem?.actualType || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'})`);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const hasSelectedNews = !!tradingSystem.selectedNews;
  const hasSelectedAsset = !!tradingSystem.selectedAsset;
  const hasSelectedPair = !!tradingSystem.selectedPair;
  const hasActual = !!(newsItem?.actual && newsItem.actual !== "‚Äî");

  console.log(`[checkTradingConditions] üìã –í—ã–±—Ä–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å: ${hasSelectedNews ? '–î–ê' : '–ù–ï–¢'} (${tradingSystem.selectedNews?.event || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'})`);
  console.log(`[checkTradingConditions] üéØ –í—ã–±—Ä–∞–Ω–Ω—ã–π –∞–∫—Ç–∏–≤: ${hasSelectedAsset ? '–î–ê' : '–ù–ï–¢'} (${tradingSystem.selectedAsset || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'})`);
  console.log(`[checkTradingConditions] üíπ –í—ã–±—Ä–∞–Ω–Ω–∞—è –ø–∞—Ä–∞: ${hasSelectedPair ? '–î–ê' : '–ù–ï–¢'} (${tradingSystem.selectedPair || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'})`);
  console.log(`[checkTradingConditions] üìä –ù–∞–ª–∏—á–∏–µ —Ñ–∞–∫—Ç–∞: ${hasActual ? '–î–ê' : '–ù–ï–¢'}`);

  if (!hasSelectedNews || !hasSelectedAsset || !hasSelectedPair || !hasActual) {
    console.log(`[checkTradingConditions] ‚ùå –û–¢–ö–õ–û–ù–ï–ù–û: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ`);
    return false;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ—Å—Ç—å –Ω–æ–≤–æ—Å—Ç–∏
  const isProcessed = isNewsProcessed(newsItem);
  console.log(`[checkTradingConditions] üîÑ –ù–æ–≤–æ—Å—Ç—å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞: ${isProcessed ? '–î–ê' : '–ù–ï–¢'}`);
  if (isProcessed) {
    console.log(`[checkTradingConditions] ‚ùå –û–¢–ö–õ–û–ù–ï–ù–û: –ù–æ–≤–æ—Å—Ç—å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞`);
    return false;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–∫—Ç–∞
  const hadInitialFact = hadFactInitially(newsItem);
  console.log(`[checkTradingConditions] üïê –§–∞–∫—Ç –±—ã–ª –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ: ${hadInitialFact ? '–î–ê' : '–ù–ï–¢'}`);
  if (hadInitialFact) {
    console.log(`[checkTradingConditions] ‚ùå –û–¢–ö–õ–û–ù–ï–ù–û: –§–∞–∫—Ç –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ`);
    return false;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–∫—Ç–∞
  const factColor = newsItem.actualType;
  const isValidFactType = (factColor === 'GFP' || factColor === 'RFP');
  console.log(`[checkTradingConditions] üé® –¢–∏–ø —Ñ–∞–∫—Ç–∞: ${factColor}, –í–∞–ª–∏–¥–Ω—ã–π: ${isValidFactType ? '–î–ê' : '–ù–ï–¢'}`);
  
  if (!isValidFactType) {
    console.log(`[checkTradingConditions] ‚ùå –û–¢–ö–õ–û–ù–ï–ù–û: –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ç–∏–ø —Ñ–∞–∫—Ç–∞ (${factColor})`);
    return false;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª
  const factKey = factColor === 'GFP' ? 'green' : 'red';
  const tradingPair = TRADING_RULES[tradingSystem.selectedAsset]?.[tradingSystem.selectedPair];
  
  console.log(`[checkTradingConditions] üîë –ö–ª—é—á —Ñ–∞–∫—Ç–∞: ${factKey}`);
  console.log(`[checkTradingConditions] üìñ –¢–æ—Ä–≥–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è ${tradingSystem.selectedAsset}/${tradingSystem.selectedPair}:`, tradingPair);
  
  if (!tradingPair || !tradingPair[factKey]) {
    console.log(`[checkTradingConditions] ‚ùå –û–¢–ö–õ–û–ù–ï–ù–û: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–æ—Ä–≥–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è ${factKey}`);
    return false;
  }

  const tradeAction = tradingPair[factKey];
  console.log(`[checkTradingConditions] ‚úÖ –û–î–û–ë–†–ï–ù–û! –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ${tradeAction.toUpperCase()}`);
  console.log(`[checkTradingConditions] üí° –õ–æ–≥–∏–∫–∞: ${factColor} —Ñ–∞–∫—Ç –ø–æ ${newsItem.currency} ‚Üí ${tradeAction} –¥–ª—è ${tradingSystem.selectedPair}`);

  return tradeAction;
}

// –ü–æ–º–æ—â–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
function isNewsProcessed(newsItem) {
  if (!newsItem) return true;
  const key = `${newsItem.event}_${newsItem.currency}_${newsItem.actual}`;
  return tradingSystem.processedNews[key] || false;
}

function markNewsAsProcessed(newsItem) {
  if (!newsItem) return;
  const key = `${newsItem.event}_${newsItem.currency}_${newsItem.actual}`;
  tradingSystem.processedNews[key] = true;
  chrome.storage.local.set({ processedNews: tradingSystem.processedNews });
}

function saveInitialNewsState(newsItem) {
  if (!newsItem) return;
  const key = `${newsItem.event}_${newsItem.currency}`;
  tradingSystem.initialNewsStates[key] = {
    hasFact: newsItem.actual && newsItem.actual !== "‚Äî",
    factType: newsItem.actualType
  };
}

function hadFactInitially(newsItem) {
  if (!newsItem) return true;
  const key = `${newsItem.event}_${newsItem.currency}`;
  return tradingSystem.initialNewsStates[key]?.hasFact || false;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
function processNewsData(newsData) {
  console.log(`[processNewsData] üîÑ –ù–ê–ß–ê–õ–û –û–ë–†–ê–ë–û–¢–ö–ò –ù–û–í–û–°–¢–ù–´–• –î–ê–ù–ù–´–•`);
  console.log(`[processNewsData] ‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleTimeString()}`);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö —É—Å–ª–æ–≤–∏–π
  const hasSelectedNews = !!tradingSystem.selectedNews;
  const hasNewsData = !!(newsData && Array.isArray(newsData));
  
  console.log(`[processNewsData] üéØ –í—ã–±—Ä–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å: ${hasSelectedNews ? '–î–ê' : '–ù–ï–¢'} (${tradingSystem.selectedNews?.event || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'})`);
  console.log(`[processNewsData] üìä –î–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–µ–π: ${hasNewsData ? '–î–ê' : '–ù–ï–¢'} (${newsData?.length || 0} —ç–ª–µ–º–µ–Ω—Ç–æ–≤)`);

  if (!hasSelectedNews) {
    console.log(`[processNewsData] ‚ùå –ü–†–ï–ö–†–ê–©–ï–ù–û: –ù–µ –≤—ã–±—Ä–∞–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞`);
    return;
  }

  if (!hasNewsData) {
    console.log(`[processNewsData] ‚ùå –ü–†–ï–ö–†–ê–©–ï–ù–û: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–≤–æ—Å—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ`);
    return;
  }

  // –ü–æ–∏—Å–∫ —Ñ–æ–∫—É—Å–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏
  console.log(`[processNewsData] üîç –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–∏: "${tradingSystem.selectedNews.event}" –¥–ª—è –≤–∞–ª—é—Ç—ã: ${tradingSystem.selectedNews.currency}`);
  
  const focusedNews = newsData.find(item => 
    item.event === tradingSystem.selectedNews.event && 
    item.currency === tradingSystem.selectedNews.currency
  );

  if (!focusedNews) {
    console.log(`[processNewsData] ‚ùå –§–æ–∫—É—Å–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –¥–∞–Ω–Ω—ã—Ö`);
    console.log(`[processNewsData] üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏:`, newsData.slice(0, 5).map(item => 
      `${item.event} (${item.currency}) - ${item.actual || '‚Äî'}`
    ));
    tradingSystem.lastProcessedFact = null;
    return;
  }

  console.log(`[processNewsData] ‚úÖ –§–æ–∫—É—Å–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å –Ω–∞–π–¥–µ–Ω–∞:`, {
    event: focusedNews.event,
    currency: focusedNews.currency,
    actual: focusedNews.actual || '‚Äî',
    actualType: focusedNews.actualType || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
    time: focusedNews.time
  });

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const newsKey = `${focusedNews.event}_${focusedNews.currency}`;
  if (!tradingSystem.initialNewsStates[newsKey]) {
    console.log(`[processNewsData] üíæ –°–æ—Ö—Ä–∞–Ω—è—é –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏: ${newsKey}`);
    saveInitialNewsState(focusedNews);
  } else {
    console.log(`[processNewsData] üìã –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –¥–ª—è: ${newsKey}`);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞
  const hasActualFact = !!(focusedNews.actual && focusedNews.actual !== "‚Äî");
  console.log(`[processNewsData] üìä –ù–∞–ª–∏—á–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞: ${hasActualFact ? '–î–ê' : '–ù–ï–¢'} (${focusedNews.actual || '‚Äî'})`);

  if (!hasActualFact) {
    console.log(`[processNewsData] ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ñ–∞–∫—Ç–∞...`);
    tradingSystem.lastProcessedFact = null;
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
  const factKey = `${focusedNews.actual}-${focusedNews.actualType}`;
  const isDuplicate = (factKey === tradingSystem.lastProcessedFact);
  
  console.log(`[processNewsData] üîë –ö–ª—é—á —Ñ–∞–∫—Ç–∞: ${factKey}`);
  console.log(`[processNewsData] üìã –ü–æ—Å–ª–µ–¥–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∞–∫—Ç: ${tradingSystem.lastProcessedFact || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
  console.log(`[processNewsData] üîÑ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: ${isDuplicate ? '–î–ê' : '–ù–ï–¢'}`);

  if (isDuplicate) {
    console.log(`[processNewsData] ‚è≠Ô∏è –ü–†–û–ü–£–°–ö: –§–∞–∫—Ç —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω`);
    return;
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞
  tradingSystem.lastProcessedFact = factKey;
  console.log(`[processNewsData] ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∞–∫—Ç: ${factKey}`);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö —É—Å–ª–æ–≤–∏–π
  console.log(`[processNewsData] üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö —É—Å–ª–æ–≤–∏–π...`);
  const tradeAction = checkTradingConditions(focusedNews);
  
  if (tradeAction) {
    console.log(`[processNewsData] üöÄ –ó–ê–ü–£–°–ö –¢–û–†–ì–û–í–û–ô –û–ü–ï–†–ê–¶–ò–ò: ${tradeAction.toUpperCase()}`);
    executeTrade(tradeAction, focusedNews);
  } else {
    console.log(`[processNewsData] ‚ùå –¢–æ—Ä–≥–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã, –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞`);
  }

  console.log(`[processNewsData] ‚úÖ –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê`);
}

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
function activateTradingSystem(newsSelection, asset, pair) {
  console.log(`[activateTradingSystem] üü¢ –ê–ö–¢–ò–í–ê–¶–ò–Ø –¢–û–†–ì–û–í–û–ô –°–ò–°–¢–ï–ú–´`);
  console.log(`[activateTradingSystem] ‚è∞ –í—Ä–µ–º—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: ${new Date().toLocaleTimeString()}`);
  console.log(`[activateTradingSystem] üì∞ –í—ã–±—Ä–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å:`, newsSelection);
  console.log(`[activateTradingSystem] üí± –ê–∫—Ç–∏–≤: ${asset}`);
  console.log(`[activateTradingSystem] üìà –í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞: ${pair}`);

  tradingSystem.isActive = true;
  tradingSystem.selectedNews = newsSelection;
  tradingSystem.selectedAsset = asset;
  tradingSystem.selectedPair = pair;
  tradingSystem.startTime = Date.now();

  console.log(`[activateTradingSystem] üìä –¢–æ—Ä–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞:`, {
    isActive: tradingSystem.isActive,
    selectedNews: tradingSystem.selectedNews?.event,
    selectedAsset: tradingSystem.selectedAsset,
    selectedPair: tradingSystem.selectedPair,
    startTime: new Date(tradingSystem.startTime).toLocaleTimeString()
  });

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const stateToSave = {
    tradingSystemActive: true,
    tradingSystemState: {
      selectedNews: newsSelection,
      selectedAsset: asset,
      selectedPair: pair,
      startTime: tradingSystem.startTime
    }
  };
  
  console.log(`[activateTradingSystem] üíæ –°–æ—Ö—Ä–∞–Ω—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ:`, stateToSave);
  chrome.storage.local.set(stateToSave);

  // –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  if (tradingSystem.monitoringInterval) {
    console.log(`[activateTradingSystem] üîÑ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞`);
    clearInterval(tradingSystem.monitoringInterval);
  }

  console.log(`[activateTradingSystem] ‚è±Ô∏è –ó–∞–ø—É—Å–∫–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤–æ—Å—Ç–µ–π (–∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É)`);
  console.log(`[activateTradingSystem] ‚è≥ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${tradingSystem.MAX_TRADING_TIME / (60 * 60 * 1000)} —á–∞—Å–æ–≤`);

  tradingSystem.monitoringInterval = setInterval(() => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞
    const runTime = Date.now() - tradingSystem.startTime;
    if (runTime > tradingSystem.MAX_TRADING_TIME) {
      console.log(`[activateTradingSystem-Monitor] ‚è∞ –¢–ê–ô–ú–ê–£–¢: –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã (${runTime / (60 * 60 * 1000)} —á–∞—Å–æ–≤)`);
      deactivateTradingSystem("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã");
      return;
    }

    // –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã
    if (Math.floor(runTime / 1000) % 10 === 0) {
      console.log(`[activateTradingSystem-Monitor] üîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω, –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${Math.floor(runTime / 1000)} —Å–µ–∫—É–Ω–¥`);
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞
    updateNewsData();
  }, 1000);

  // –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ-–∫–ª–∏–∫–∞
  console.log(`[activateTradingSystem] üîÑ –ó–∞–ø—É—Å–∫–∞—é –∞–≤—Ç–æ-–∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ '–°–µ–≥–æ–¥–Ω—è'`);
  startAutoClick();

  console.log(`[activateTradingSystem] ‚úÖ –¢–û–†–ì–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê –£–°–ü–ï–®–ù–û –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê`);
}

// –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
function deactivateTradingSystem(reason = "–û—Ç–∫–ª—é—á–µ–Ω–æ –≤—Ä—É—á–Ω—É—é") {
  console.log(`[deactivateTradingSystem] üî¥ –î–ï–ê–ö–¢–ò–í–ê–¶–ò–Ø –¢–û–†–ì–û–í–û–ô –°–ò–°–¢–ï–ú–´`);
  console.log(`[deactivateTradingSystem] ‚è∞ –í—Ä–µ–º—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏: ${new Date().toLocaleTimeString()}`);
  console.log(`[deactivateTradingSystem] üìù –ü—Ä–∏—á–∏–Ω–∞: ${reason}`);
  
  if (tradingSystem.startTime) {
    const runTime = Date.now() - tradingSystem.startTime;
    console.log(`[deactivateTradingSystem] ‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã: ${Math.floor(runTime / 1000)} —Å–µ–∫—É–Ω–¥ (${Math.floor(runTime / 60000)} –º–∏–Ω—É—Ç)`);
  }

  console.log(`[deactivateTradingSystem] üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–¥ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ–º:`, {
    isActive: tradingSystem.isActive,
    selectedNews: tradingSystem.selectedNews?.event || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
    selectedAsset: tradingSystem.selectedAsset || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
    selectedPair: tradingSystem.selectedPair || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
    hasMonitoringInterval: !!tradingSystem.monitoringInterval,
    hasAutoClickInterval: !!tradingSystem.autoClickInterval
  });

  tradingSystem.isActive = false;
  
  if (tradingSystem.monitoringInterval) {
    console.log(`[deactivateTradingSystem] üîÑ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞`);
    clearInterval(tradingSystem.monitoringInterval);
    tradingSystem.monitoringInterval = null;
  } else {
    console.log(`[deactivateTradingSystem] ‚ö†Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω`);
  }

  console.log(`[deactivateTradingSystem] üîÑ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∞–≤—Ç–æ-–∫–ª–∏–∫`);
  stopAutoClick();

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const stateToSave = {
    tradingSystemActive: false,
    tradingSystemState: null
  };
  
  console.log(`[deactivateTradingSystem] üíæ –°–æ—Ö—Ä–∞–Ω—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏:`, stateToSave);
  chrome.storage.local.set(stateToSave);

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏
  console.log(`[deactivateTradingSystem] üîî –û—Ç–ø—Ä–∞–≤–ª—è—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏`);
  chrome.notifications.create({
    type: 'basic',
    iconUrl: 'icons/icon48.png',
    title: 'DK NEWS HUNTERS',
    message: `–¢–æ—Ä–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞: ${reason}`
  });

  console.log(`[deactivateTradingSystem] ‚úÖ –¢–û–†–ì–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê –£–°–ü–ï–®–ù–û –î–ï–ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê: ${reason}`);
}

// –§—É–Ω–∫—Ü–∏–∏ –∞–≤—Ç–æ-–∫–ª–∏–∫–∞
function startAutoClick() {
  clickTodayButton();
  if (tradingSystem.autoClickInterval) {
    clearInterval(tradingSystem.autoClickInterval);
  }
  tradingSystem.autoClickInterval = setInterval(clickTodayButton, 15000);
}

function stopAutoClick() {
  if (tradingSystem.autoClickInterval) {
    clearInterval(tradingSystem.autoClickInterval);
    tradingSystem.autoClickInterval = null;
  }
}

function clickTodayButton() {
  const selector = 'a#timeFrame_today.newBtn.toggleButton.LightGray';

  chrome.tabs.query({ url: "https://ru.investing.com/*" }, (tabs) => {
    if (tabs.length > 0) {
      chrome.scripting.executeScript({
        target: { tabId: tabs[0].id },
        func: (sel) => {
          const element = document.querySelector(sel);
          if (element) {
            element.click();
            console.log("–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ '–°–µ–≥–æ–¥–Ω—è' –≤—ã–ø–æ–ª–Ω–µ–Ω");
            return true;
          }
          return false;
        },
        args: [selector]
      }, (results) => {
        if (chrome.runtime.lastError) {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ:", chrome.runtime.lastError);
        }
      });
    }
  });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
function updateNewsData() {
  const investingUrl = "https://ru.investing.com/economic-calendar/";

  const handleResult = (tabId) => {
    chrome.scripting.executeScript({
      target: { tabId },
      func: extractNewsData
    }, (results) => {
      if (chrome.runtime.lastError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', chrome.runtime.lastError);
        return;
      }
      
      if (results && results[0] && results[0].result) {
        console.log('–î–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–µ–π —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã');
        chrome.storage.local.set({ newsData: results[0].result });
        
        if (tradingSystem.isActive) {
          processNewsData(results[0].result);
        }
      } else {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–µ–π');
      }
    });
  };

  // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –æ—Ç–∫—Ä—ã—Ç—É—é –≤–∫–ª–∞–¥–∫—É Investing.com
  chrome.tabs.query({ url: investingUrl + "*" }, (tabs) => {
    if (tabs && tabs.length > 0) {
      console.log('–ù–∞–π–¥–µ–Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∞—è –≤–∫–ª–∞–¥–∫–∞ Investing.com, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–µ');
      handleResult(tabs[0].id);
    } else {
      console.log('–í–∫–ª–∞–¥–∫–∞ Investing.com –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é');
      chrome.tabs.create({ 
        url: investingUrl, 
        active: false 
      }, (newTab) => {
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const onUpdatedListener = (tabId, changeInfo) => {
          if (tabId === newTab.id && changeInfo.status === 'complete') {
            chrome.tabs.onUpdated.removeListener(onUpdatedListener);
            console.log('–í–∫–ª–∞–¥–∫–∞ Investing.com –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ');
            handleResult(tabId);
          }
        };
        
        chrome.tabs.onUpdated.addListener(onUpdatedListener);
      });
    }
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
  if (message.action === "openInvesting") {
    console.log('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ Investing.com');
    updateNewsData();
    sendResponse({ success: true });
    return true;
  }

  if (message.action === "activateTrading") {
    activateTradingSystem(message.selectedNews, message.selectedAsset, message.selectedPair);
    sendResponse({ success: true });
    return true;
  }

  if (message.action === "deactivateTrading") {
    deactivateTradingSystem("–û—Ç–∫–ª—é—á–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º");
    sendResponse({ success: true });
    return true;
  }

  if (message.action === "getTradingState") {
    sendResponse({ 
      isActive: tradingSystem.isActive,
      state: tradingSystem
    });
    return true;
  }

  if (message.action === "executeTrade") {
    executeTrade(message.tradeAction, message.newsItem).then(result => {
      sendResponse({ success: result });
    });
    return true;
  }

  if (message.action === "clearProcessedNews") {
    // –û—á–∏—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ (–¥–ª—è debug —Ä–µ–∂–∏–º–∞)
    tradingSystem.processedNews = {};
    tradingSystem.initialNewsStates = {};
    tradingSystem.lastProcessedFact = null;
    chrome.storage.local.remove(['processedNews']);
    console.log('[Background] –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ—á–∏—â–µ–Ω—ã (DEBUG MODE)');
    sendResponse({ success: true });
    return true;
  }

  if (message.action === "resetTradingSystem") {
    // –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã (–¥–ª—è debug —Ä–µ–∂–∏–º–∞)
    tradingSystem.processedNews = {};
    tradingSystem.initialNewsStates = {};
    tradingSystem.lastProcessedFact = null;
    chrome.storage.local.remove(['processedNews']);
    
    if (tradingSystem.isActive) {
      deactivateTradingSystem("–°–±—Ä–æ—Å —Å–∏—Å—Ç–µ–º—ã (DEBUG MODE)");
    }
    
    console.log('[Background] –¢–æ—Ä–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–±—Ä–æ—à–µ–Ω–∞ (DEBUG MODE)');
    sendResponse({ success: true });
    return true;
  }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
function initializeTradingSystem() {
  console.log('[Background] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã');
  
  // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
  chrome.storage.local.get(['tradingSystemActive', 'tradingSystemState', 'processedNews'], (result) => {
    console.log('[Background] –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', result);
    
    if (result.processedNews) {
      tradingSystem.processedNews = result.processedNews;
    }

    if (result.tradingSystemActive && result.tradingSystemState) {
      const state = result.tradingSystemState;
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –∏—Å—Ç–µ–∫ –ª–∏ —Ç–∞–π–º–∞—É—Ç
      if (Date.now() - state.startTime < tradingSystem.MAX_TRADING_TIME) {
        console.log('[Background] –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã');
        activateTradingSystem(state.selectedNews, state.selectedAsset, state.selectedPair);
        tradingSystem.startTime = state.startTime; // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞
      } else {
        // –¢–∞–π–º–∞—É—Ç –∏—Å—Ç–µ–∫, –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        console.log('[Background] –¢–∞–π–º–∞—É—Ç –∏—Å—Ç–µ–∫, –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ');
        chrome.storage.local.set({
          tradingSystemActive: false,
          tradingSystemState: null
        });
      }
    }
  });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
chrome.runtime.onStartup.addListener(() => {
  console.log('[Background] onStartup');
  initializeTradingSystem();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
chrome.runtime.onInstalled.addListener(() => {
  console.log('[Background] onInstalled');
  
  // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
  chrome.storage.local.set({
    tradingSystemActive: false,
    tradingSystemState: null
  }, () => {
    console.log('[Background] –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ');
    initializeTradingSystem();
  });
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
initializeTradingSystem();

// ============================================================================
// –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° BID –ò –ê–í–¢–û–†–ò–ó–ê–¶–ò–ï–ô –í BACKGROUND
// ============================================================================

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–µ—Ç–∞-–¥–∞–Ω–Ω—ã–µ —Å–∞–π—Ç–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±—Ä–æ–∫–µ—Ä—Å–∫–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @returns {boolean} - true –µ—Å–ª–∏ —Å–∞–π—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ –±—Ä–æ–∫–µ—Ä—Å–∫–∏–π
 */
function checkBrokerMeta() {
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ –±—Ä–æ–∫–µ—Ä–∞
    const themeColorMeta = document.querySelector('meta[name="theme-color"][content="#1F1F23"]');
    const colorSchemesMeta = document.querySelector('meta[name="supported-color-schemes"][content="light dark"]');
    if (themeColorMeta && colorSchemesMeta) {
      console.log('[DK] –ù–∞–π–¥–µ–Ω—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –º–µ—Ç–∞-—Ç–µ–≥–∏ –±—Ä–æ–∫–µ—Ä–∞');
      return true;
    }
    console.log('[DK] –°–∞–π—Ç –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ –±—Ä–æ–∫–µ—Ä—Å–∫–∏–π');
    return false;
  } catch (error) {
    console.error('[DK] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –º–µ—Ç–∞-–¥–∞–Ω–Ω—ã—Ö:', error);
    return false;
  }
}

/**
 * –ü—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å BID –∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –≤–∫–ª–∞–¥–æ–∫ –±—Ä–æ–∫–µ—Ä–∞ (–≤–µ—Ä—Å–∏—è –¥–ª—è background)
 * @returns {Promise<string|null>} - BID –∏–ª–∏ null –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ
 */
async function attemptGetBIDBackground() {
  return new Promise((resolve) => {
    chrome.tabs.query({ url: "*://*/*" }, async (tabs) => {
      console.log('[Background] –ü—Ä–æ–≤–µ—Ä–∫–∞', tabs.length, '–≤–∫–ª–∞–¥–æ–∫ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –±—Ä–æ–∫–µ—Ä—Å–∫–∏—Ö —Å–∞–π—Ç–æ–≤');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –≤–∫–ª–∞–¥–∫—É —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ checkBrokerMeta
      const brokerTabs = [];
      
      for (const tab of tabs) {
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
        if (!tab.url || tab.url.startsWith('chrome://') || tab.url.startsWith('chrome-extension://')) {
          continue;
        }
        
        try {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–∫–ª–∞–¥–∫–∞ –±—Ä–æ–∫–µ—Ä—Å–∫–∏–º —Å–∞–π—Ç–æ–º
          const results = await new Promise((tabResolve) => {
            chrome.scripting.executeScript({
              target: { tabId: tab.id },
              func: checkBrokerMeta
            }, (results) => {
              if (chrome.runtime.lastError) {
                console.log('[Background] –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∫–ª–∞–¥–∫—É', tab.id, ':', chrome.runtime.lastError.message);
                tabResolve(false);
              } else if (results && results[0]) {
                tabResolve(results[0].result);
              } else {
                tabResolve(false);
              }
            });
          });
          
          if (results) {
            console.log('[Background] –ù–∞–π–¥–µ–Ω –±—Ä–æ–∫–µ—Ä—Å–∫–∏–π —Å–∞–π—Ç –Ω–∞ –≤–∫–ª–∞–¥–∫–µ:', tab.url);
            brokerTabs.push(tab);
          }
        } catch (error) {
          console.log('[Background] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–∫–ª–∞–¥–∫–∏', tab.id, ':', error);
        }
      }

      if (brokerTabs.length === 0) {
        console.log('[Background] –ù–µ –Ω–∞–π–¥–µ–Ω—ã –≤–∫–ª–∞–¥–∫–∏ –±—Ä–æ–∫–µ—Ä–∞ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫');
        resolve(null);
        return;
      }

      console.log('[Background] –ù–∞–π–¥–µ–Ω–æ', brokerTabs.length, '–±—Ä–æ–∫–µ—Ä—Å–∫–∏—Ö –≤–∫–ª–∞–¥–æ–∫, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å BID —Å –ø–µ—Ä–≤–æ–π');

      // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å BID —Å –ø–µ—Ä–≤–æ–π –Ω–∞–π–¥–µ–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ –±—Ä–æ–∫–µ—Ä–∞
      chrome.scripting.executeScript({
        target: { tabId: brokerTabs[0].id },
        func: () => {
          // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ BID —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
          function forceGetBID(maxAttempts = 5, intervalMs = 2000) {
            return new Promise((resolve) => {
              let attempts = 0;
              
              const tryGetBID = () => {
                attempts++;
                console.log(`[DK] –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è BID #${attempts}`);
                
                // –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –∫–ª–∞—Å—Å–æ–º info__id
                const divElement = document.querySelector('.info__id');
                
                if (divElement) {
                  const childWithDataHdShow = Array.from(divElement.children).find(child => child.hasAttribute('data-hd-show'));
                  if (childWithDataHdShow) {
                    const bid = childWithDataHdShow.getAttribute('data-hd-show');
                    const bidValue = bid ? bid.replace('id ', '') : null;

                    if (bidValue) {
                      console.log(`[DK] BID —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ #${attempts}:`, bidValue);
                      // –°–æ—Ö—Ä–∞–Ω—è–µ–º BID –≤ storage
                      if (typeof chrome !== 'undefined' && chrome.storage) {
                        chrome.storage.local.set({ USER_BID: bidValue });
                      }
                      resolve(bidValue);
                      return;
                    }
                  }
                }
                
                if (attempts >= maxAttempts) {
                  console.error(`[DK] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å BID –∑–∞ ${maxAttempts} –ø–æ–ø—ã—Ç–æ–∫`);
                  resolve(null);
                  return;
                }
                
                console.log(`[DK] BID –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–ª–µ–¥—É—é—â–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ ${intervalMs}ms`);
                setTimeout(tryGetBID, intervalMs);
              };
              
              tryGetBID();
            });
          }
          
          return forceGetBID(5, 2000); // 5 –ø–æ–ø—ã—Ç–æ–∫, –∏–Ω—Ç–µ—Ä–≤–∞–ª 2 —Å–µ–∫
        }
      }, (results) => {
        if (chrome.runtime.lastError) {
          console.error('[Background] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞:', chrome.runtime.lastError);
          resolve(null);
        } else if (results && results[0]) {
          resolve(results[0].result);
        } else {
          resolve(null);
        }
      });
    });
  });
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤–µ—Ä—Å–∏—è –¥–ª—è background)
 * @param {string} token - –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏  
 * @returns {Promise<boolean>} - –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏
 */
async function verifySubscriptionBackground(token) {
  try {
    let { USER_BID } = await chrome.storage.local.get("USER_BID");
    
    // –ï—Å–ª–∏ BID –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ
    if (!USER_BID) {
      console.log('[Background] BID –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –∑–∞–Ω–æ–≤–æ');
      
      try {
        USER_BID = await attemptGetBIDBackground();
        if (USER_BID) {
          console.log('[Background] BID —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏:', USER_BID);
          // –û–±–Ω–æ–≤–ª—è–µ–º expected_bid, —Ç–∞–∫ –∫–∞–∫ –ø–æ–ª—É—á–∏–ª–∏ –Ω–æ–≤—ã–π BID
          chrome.storage.local.set({ expected_bid: USER_BID });
        } else {
          console.log('[Background] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å BID –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏');
        }
      } catch (error) {
        console.error('[Background] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–ª—É—á–∏—Ç—å BID:', error);
      }
    }
    
    const response = await fetch("http://176.108.253.203:8000/verify", {
      method: "POST",
      headers: { 
        "Content-Type": "application/json",
        "Authorization": `Bearer ${token}`
      },
      body: JSON.stringify({
        token,
        bid: USER_BID 
       })
    });
    
    // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, timeout)
    if (!response) {
      console.error("[Background] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞");
      return true; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    }
    
    const data = await response.json();
    console.log("[Background] –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ—Ç–≤–µ—Ç:", data.message);
    
    if (!data.success || !data.subscriptionActive) {
      const reason = data.message || "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –∏–ª–∏ –∏—Å—Ç–µ–∫–ª–∞";
      console.log("[Background]", reason);
      
      // –û—á–∏—â–∞–µ–º —Ç–æ–∫–µ–Ω –∏ –æ—Ç–∫–ª—é—á–∞–µ–º —Ç–æ—Ä–≥–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
      chrome.storage.local.remove(["authToken", "expected_bid"]);
      if (tradingSystem.isActive) {
        deactivateTradingSystem(reason);
      }
      
      return false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ BID (Broker ID) - –º—è–≥–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    const { expected_bid } = await chrome.storage.local.get("expected_bid");
    
    if (!USER_BID) {
      console.log("[Background] BID –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–∞–∂–µ –ø–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏");
      return true; // –ù–µ –≤—ã—Ö–æ–¥–∏–º, —Ç–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–º–µ–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –æ–±–∞ BID
    if (expected_bid && USER_BID && expected_bid !== USER_BID) {
      const reason = "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è";
      console.log(`[Background] ${reason}! –í—ã–ø–æ–ª–Ω—è–µ–º –≤—ã—Ö–æ–¥.`);
      
      // –û—á–∏—â–∞–µ–º —Ç–æ–∫–µ–Ω –∏ –æ—Ç–∫–ª—é—á–∞–µ–º —Ç–æ—Ä–≥–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
      chrome.storage.local.remove(["authToken", "expected_bid"]);
      if (tradingSystem.isActive) {
        deactivateTradingSystem(reason);
      }
      
      return false;
    }
    
    return true;
  } catch (error) {
    console.error("[Background] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏:", error);
    // –í —Å–ª—É—á–∞–µ –ª—é–±–æ–π –æ—à–∏–±–∫–∏ (—Å–µ—Ç–∏, –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏ —Ç.–¥.) —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    return true;
  }
}

// ============================================================================
// –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–ò–ï –ü–†–û–í–ï–†–ö–ò –í BACKGROUND
// ============================================================================

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
setInterval(async () => {
  chrome.storage.local.get("authToken", async (result) => {
    if (result.authToken) {
      console.log('[Background] –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏');
      await verifySubscriptionBackground(result.authToken);
    }
  });
}, 5 * 60 * 1000);

console.log('[Background] –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
function extractNewsData() {
  try {
    const rows = document.querySelectorAll("table.genTbl tr.js-event-item");
    const news = [];

    rows.forEach((row) => {
      try {
        const timeElement = row.querySelector(".first.left.time.js-time");
        const eventElement = row.querySelector("a[href^='/economic-calendar']");
        const currencyElement = row.querySelector(".flagCur");
        const sentimentElement = row.querySelector(".sentiment");
        const actualElement = row.querySelector("td.act");
        const forecastElement = row.querySelector("td.fore");
        const previousElement = row.querySelector("td.prev");

        const timeStr = timeElement ? timeElement.textContent.trim() : '';
        const event = eventElement ? eventElement.textContent.trim() : '';
        const currency = currencyElement ? currencyElement.textContent.trim().split(/\s+/).pop() : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        const impact = sentimentElement ? sentimentElement.querySelectorAll("i.grayFullBullishIcon").length : 0;
        const actual = actualElement ? actualElement.textContent.trim() : '‚Äî';
        const forecast = forecastElement ? forecastElement.textContent.trim() : '‚Äî';
        const previous = previousElement ? previousElement.textContent.trim() : '‚Äî';

        const actualType = actualElement ?
          (actualElement.classList.contains('greenFont') ? 'GFP' :
          actualElement.classList.contains('redFont') ? 'RFP' :
          actualElement.classList.contains('blackFont') ? 'BFP' : 'NFP') : 'NFP';

        const forecastType = forecastElement ?
          (forecastElement.classList.contains('greenFont') ? 'GFP' :
          forecastElement.classList.contains('redFont') ? 'RFP' :
          forecastElement.classList.contains('blackFont') ? 'BFP' : 'NFP') : 'NFP';

        const previousType = previousElement ?
          (previousElement.classList.contains('greenFont') ? 'GFP' :
          previousElement.classList.contains('redFont') ? 'RFP' :
          previousElement.classList.contains('blackFont') ? 'BFP' : 'NFP') : 'NFP';

        const factSelector = actualElement && actualElement.id ? `#${actualElement.id}` : null;

        if (timeStr && event) {
          news.push({
            time: timeStr,
            event,
            currency,
            impact,
            actual,
            actualType,
            forecast,
            forecastType,
            previous,
            previousType,
            factSelector
          });
        }
      } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–æ–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏:", e);
      }
    });

    return news;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ extractNewsData:', error);
    return [];
  }
}
